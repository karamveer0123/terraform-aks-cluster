name: Terraform AKS Cluster Creation

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.5.6'

    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

  create-aks-cluster-dev:
    name: 'Create AKS Cluster for Dev Environment'
    runs-on: ubuntu-latest
    environment: dev  # Static environment for the Dev environment

    needs: terraform  # This ensures the Terraform job completes first

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.5.6'

    - name: Azure login for AKS (Dev)
      uses: azure/login@v1
      with: 
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init for AKS (Dev)
      working-directory: terraform-manifest
      env:
        STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}
        CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
        AZURE_STORAGE_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCESS_KEY }}
        TF_VAR_environment: dev  # Set the environment variable
      run: terraform init -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" -backend-config="key=${{ secrets.DEV_ENV }}-githubactions.tfstate" -backend-config="access_key=${{ secrets.AZURE_STORAGE_ACCESS_KEY }}"

    - name: Terraform validate for AKS (Dev)
      working-directory: terraform-manifest
      env:
        TF_VAR_environment: dev  # Ensure this is passed in the validate step
      run: terraform validate

    - name: Terraform Plan for AKS (Dev)
      working-directory: terraform-manifest
      env:
        TF_VAR_environment: dev  # Pass the environment variable here
      run: terraform plan -out=tfplan

    - name: Terraform Apply for AKS (Dev)
      working-directory: terraform-manifest
      env:
        TF_VAR_environment: dev  # Pass the environment variable here as well
      run: terraform apply --auto-approve tfplan

  create-aks-cluster-qa:
    name: 'Create AKS Cluster for QA Environment'
    runs-on: ubuntu-latest
    environment: qa  # Static environment for the QA environment

    needs: terraform  # This ensures the Terraform job completes first

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.5.6'

    - name: Azure login for AKS (QA)
      uses: azure/login@v1
      with: 
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init for AKS (QA)
      working-directory: terraform-manifest
      env:
        STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}
        CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
        AZURE_STORAGE_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCESS_KEY }}
        TF_VAR_environment: qa  # Set the environment variable for QA
      run: terraform init -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" -backend-config="key=${{ secrets.QA_ENV }}-githubactions.tfstate" -backend-config="access_key=${{ secrets.AZURE_STORAGE_ACCESS_KEY }}"

    - name: Terraform validate for AKS (QA)
      working-directory: terraform-manifest
      env:
        TF_VAR_environment: qa  # Ensure this is passed in the validate step for QA
      run: terraform validate

    - name: Terraform Plan for AKS (QA)
      working-directory: terraform-manifest
      env:
        TF_VAR_environment: qa  # Pass the environment variable here for QA
      run: terraform plan -out=tfplan

    - name: Terraform Apply for AKS (QA)
      working-directory: terraform-manifest
      env:
        TF_VAR_environment: qa  # Pass the environment variable here as well for QA
      run: terraform apply --auto-approve tfplan
